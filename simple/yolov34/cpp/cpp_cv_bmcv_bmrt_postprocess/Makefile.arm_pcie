top_dir ?= ../../..
sdk_dir = $(top_dir)
install_dir = $(top_dir)/install

CXX = aarch64-linux-gnu-g++

INC_DIR = -I$(sdk_dir)/include/opencv/opencv4
INC_DIR += -I$(sdk_dir)/include/ffmpeg
INC_DIR += -I$(sdk_dir)/include
INC_DIR += -I$(sdk_dir)/include/bmruntime
INC_DIR += -I$(sdk_dir)/include/bmlib
INC_DIR += -I$(sdk_dir)/include/third_party/boost/include
INC_DIR += -I$(top_dir)/NeuralNetwork/include

CXXFLAGS := -g -O2 -Wall -std=c++11 -w $(INC_DIR)
LOCAL_MEM_ADDRWIDTH           ?= 19
CXXFLAGS += -DCONFIG_LOCAL_MEM_ADDRWIDTH=$(LOCAL_MEM_ADDRWIDTH)

LDLIBS := -lbmrt -lbmlib -lbmcv -ldl \
	-lopencv_core -lopencv_imgproc -lopencv_imgcodecs -lopencv_videoio \
	-lbmvideo -lswresample -lswscale -lavformat -lavutil \
	-lprotobuf -lgflags -lglog -lboost_system -lboost_filesystem -lpthread -lbmjpuapi -lbmjpulite

LIB_DIR = -L$(sdk_dir)/lib/thirdparty/soc
LIB_DIR += -L$(sdk_dir)/lib/bmnn/arm_pcie -L$(sdk_dir)/lib/sys/aarch64
LIB_DIR += -L$(sdk_dir)/lib/opencv/arm_pcie -L$(sdk_dir)/lib/ffmpeg/arm_pcie -L$(sdk_dir)/lib/decode/arm_pcie

LDFLAGS = -Wl,-rpath=$(sdk_dir)/lib/bmnn/arm_pcie
LDFLAGS += -Wl,-rpath=$(sdk_dir)/lib/opencv/arm_pcie
LDFLAGS += -Wl,-rpath=$(sdk_dir)/lib/ffmpeg/arm_pcie
LDFLAGS += -Wl,-rpath=$(sdk_dir)/lib/decode/arm_pcie
LDFLAGS += -Wl,-rpath=$(sdk_dir)/lib/thirdparty/soc
LDFLAGS += -Wl,-rpath=$(sdk_dir)/lib/sys/aarch64
LDFLAGS += $(LIB_DIR)

all: yolo_test.arm_pcie

yolo_test.arm_pcie: main.cpp yolov3.cpp
	$(CXX) $^ $(CXXFLAGS) $(LDLIBS) $(LDFLAGS) -o $@

clean:
	rm -f yolo_test.arm_pcie

